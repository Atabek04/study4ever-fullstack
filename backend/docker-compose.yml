name: Study4Ever

services:
  postgres:
    image: postgres:17
    container_name: s4e-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-db-init:
    image: postgres:17
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      bash -c "
        psql -h postgres -U postgres -c \"CREATE USER ${AUTH_DB_USERNAME} WITH PASSWORD '${POSTGRES_PASSWORD}';\" &&
        psql -h postgres -U postgres -c \"CREATE DATABASE auth_service_s4e;\" &&
        psql -h postgres -U postgres -c \"GRANT ALL PRIVILEGES ON DATABASE auth_service_s4e TO ${AUTH_DB_USERNAME};\" &&
        psql -h postgres -U postgres -d auth_service_s4e -c \"GRANT ALL ON SCHEMA public TO ${AUTH_DB_USERNAME};\"
      "
    environment:
      - PGPASSWORD=${POSTGRES_PASSWORD}

  course-db-init:
    image: postgres:17
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      bash -c "
        psql -h postgres -U postgres -c \"CREATE USER ${COURSE_DB_USERNAME} WITH PASSWORD '${POSTGRES_PASSWORD}';\" &&
        psql -h postgres -U postgres -c \"CREATE DATABASE course_service_s4e;\" &&
        psql -h postgres -U postgres -c \"GRANT ALL PRIVILEGES ON DATABASE course_service_s4e TO ${COURSE_DB_USERNAME};\" &&
        psql -h postgres -U postgres -d course_service_s4e -c \"GRANT ALL ON SCHEMA public TO ${COURSE_DB_USERNAME};\"
      "
    environment:
      - PGPASSWORD=${POSTGRES_PASSWORD}

  progress-db-init:
    image: postgres:17
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      bash -c "
        psql -h postgres -U postgres -c \"CREATE USER ${PROGRESS_DB_USERNAME} WITH PASSWORD '${POSTGRES_PASSWORD}';\" &&
        psql -h postgres -U postgres -c \"CREATE DATABASE progress_service_s4e;\" &&
        psql -h postgres -U postgres -c \"GRANT ALL PRIVILEGES ON DATABASE progress_service_s4e TO ${PROGRESS_DB_USERNAME};\" &&
        psql -h postgres -U postgres -d progress_service_s4e -c \"GRANT ALL ON SCHEMA public TO ${PROGRESS_DB_USERNAME};\"
      "
    environment:
      - PGPASSWORD=${POSTGRES_PASSWORD}

  rabbitmq:
    image: rabbitmq:3-management
    container_name: s4e-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  config-server:
    image: study4ever/config-server:latest
    container_name: s4e-config-server
    ports:
      - "8888:8888"
    environment:
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
    restart: on-failure

  eureka-server:
    image: study4ever/eureka-server:latest
    container_name: s4e-eureka-server
    ports:
      - "8761:8761"
    environment:
      - EUREKA_SERVER_PORT=${EUREKA_SERVER_PORT}
    depends_on:
      config-server:
        condition: service_started
    restart: on-failure

  auth-service:
    image: study4ever/auth-service:latest
    container_name: s4e-auth-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - AUTH_DB_URL=${DOCKER_AUTH_DB_URL}
      - AUTH_DB_USERNAME=${AUTH_DB_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - EUREKA_SERVER_URL=${EUREKA_SERVER_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_ACCESS_EXPIRATION=${JWT_ACCESS_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}
      - AUTH_SERVICE_PORT=8081
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
    restart: on-failure

  course-service:
    image: study4ever/course-service:latest
    container_name: s4e-course-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - COURSE_DB_URL=${DOCKER_COURSE_DB_URL}
      - COURSE_DB_USERNAME=${COURSE_DB_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - EUREKA_SERVER_URL=${EUREKA_SERVER_URL}
      - COURSE_SERVICE_PORT=8082
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
    restart: on-failure

  progress-service:
    image: study4ever/progress-service:latest
    container_name: s4e-progress-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - PROGRESS_DB_URL=${DOCKER_PROGRESS_DB_URL}
      - PROGRESS_DB_USERNAME=${PROGRESS_DB_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - EUREKA_SERVER_URL=${EUREKA_SERVER_URL}
      - PROGRESS_SERVICE_PORT=8083
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
    restart: on-failure

  api-gateway:
    image: study4ever/api-gateway:latest
    container_name: s4e-api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - CONFIG_SERVER_URL=${CONFIG_SERVER_URL}
      - EUREKA_SERVER_URL=${EUREKA_SERVER_URL}
      - JWT_SECRET=${JWT_SECRET}
      - API_GATEWAY_PORT=8095
    ports:
      - "8095:8095"
    depends_on:
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
      auth-service:
        condition: service_started
      course-service:
        condition: service_started
      progress-service:
        condition: service_started
    restart: on-failure

volumes:
  postgres_data:
  rabbitmq_data: